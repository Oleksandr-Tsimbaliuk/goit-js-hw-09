{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EAAgB,EACpB,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,gBAC9BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,kBAGjCH,EAAKC,KAAKM,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOX,EAAKI,MAAMQ,OAC/BC,EAAYF,OAAOX,EAAKK,KAAKO,OAC7BE,EAAcH,OAAOX,EAAKM,OAAOM,OAErC,MAAMG,EAAaC,aAAY,KAC7BjB,GAAiB,EACbA,EAAgBe,EAClBG,cAAcF,IAkBpB,SAAuBG,EAAUd,GAC/B,MAAMe,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BR,aAAY,KACNG,EACFI,EAAQ,uBAAuBL,QAAed,OAE9CoB,EAAO,sBAAsBN,QAAed,MAAS,GAEtDA,EAAA,GAEP,CA3BIqB,CAAc1B,EAAeW,GAC1BgB,MAAKC,GAAWC,EAAA/B,GAASgC,OAAOC,QAAQH,KACxCI,OAAMJ,GAAWC,EAAA/B,GAASgC,OAAOG,QAAQL,KAE5CjB,GAAcG,EACdoB,QAAQC,IAAIxB,GACZuB,QAAQC,IAAIrB,GACZoB,QAAQC,IAAIpB,GAAA,GACXJ,GAEHuB,QAAQC,IAAIxB,GACZuB,QAAQC,IAAIrB,GACZoB,QAAQC,IAAIpB,EACd,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet amountCounter = 0;\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(refs.delay.value);\n  let stepValue = Number(refs.step.value);\n  let amountValue = Number(refs.amount.value);\n\n  const intervalId = setInterval(() => {\n    amountCounter += 1;\n    if (amountCounter > amountValue) {\n      clearInterval(intervalId);\n      return;\n    }\n    createPromise(amountCounter, delayValue)\n      .then(message => Notiflix.Notify.success(message))\n      .catch(message => Notiflix.Notify.failure(message));\n    // stepValue += delayValue;\n    delayValue += stepValue;\n    console.log(delayValue);\n    console.log(stepValue);\n    console.log(amountValue);\n  }, delayValue);\n\n  console.log(delayValue);\n  console.log(stepValue);\n  console.log(amountValue);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\n// let amountCounter = 0;\n// const refs = {\n//   form: document.querySelector('.form'),\n//   delay: document.querySelector('[name=delay]'),\n//   step: document.querySelector('[name=step]'),\n//   amount: document.querySelector('[name=amount]'),\n// };\n\n// refs.form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(event) {\n//   event.preventDefault();\n//   let delayValue = Number(refs.delay.value);\n//   let stepValue = Number(refs.step.value);\n\n//   const intervalId = setInterval(() => {\n//     amountCounter += 1;\n\n//     if (amountCounter > refs.amount.value) {\n//       clearInterval(intervalId);\n//       return;\n//     } else {\n//       createPromise(amountCounter, delayValue)\n//         .then(message => Notiflix.Notify.success(message))\n//         .catch(message => Notiflix.Notify.failure(message));\n//     }\n//     delayValue += stepValue;\n//   }, delayValue);\n//   console.log(delayValue);\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((resolve, reject) => {\n//     setInterval(() => {\n//       if (shouldResolve) {\n//         resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       } else {\n//         reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//       }\n//     }, delay);\n//   });\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$amountCounter","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","intervalId","setInterval","clearInterval","position","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","then","message","$parcel$interopDefault","Notify","success","catch","failure","console","log"],"version":3,"file":"03-promises.33e51063.js.map"}