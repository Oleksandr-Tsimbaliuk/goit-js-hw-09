{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,gBAC9BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,kBA0BjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SACNL,E,MACAJ,IAGFU,EAAO,C,SACLN,E,MACAJ,GACF,GAEDA,EAAA,GAEP,CAxCAJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOpB,EAAKI,MAAMiB,OACnC,MAAMC,EAAYF,OAAOpB,EAAKK,KAAKgB,OAC7BE,EAAcH,OAAOpB,EAAKM,OAAOe,OACvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCjB,EAAciB,EAAGL,GACdM,MAAK,EAACjB,SAAEA,EAAQJ,MAAEA,MACjBsB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAuBpB,QAAeJ,MAAS,IAGlDyB,OAAM,EAACrB,SAAEA,EAAQJ,MAAEA,MAClBsB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAsBtB,QAAeJ,MAAS,IAGpDe,GAAcG,CAElB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(refs.delay.value);\n  const stepValue = Number(refs.step.value);\n  const amountValue = Number(refs.amount.value);\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n\n// import Notiflix from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n//   delay: document.querySelector('[name=delay]'),\n//   step: document.querySelector('[name=step]'),\n//   amount: document.querySelector('[name=amount]'),\n// };\n\n// let amountCounter = 0;\n// refs.form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(event) {\n//   event.preventDefault();\n//   let delayValue = Number(refs.delay.value);\n//   let stepValue = Number(refs.step.value);\n//   let amountValue = Number(refs.amount.value);\n\n//   const intervalId = setInterval(() => {\n//     amountCounter += 1;\n//     if (amountCounter > amountValue) {\n//       clearInterval(intervalId);\n//       return;\n//     }\n//     createPromise(amountCounter, delayValue)\n//       .then(message => Notiflix.Notify.success(message))\n//       .catch(message => Notiflix.Notify.failure(message));\n//     delayValue += stepValue;\n//   }, stepValue);\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((resolve, reject) => {\n//     setInterval(() => {\n//       if (shouldResolve) {\n//         resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       } else {\n//         reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//       }\n//     }, delay);\n//   });\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.d7a52087.js.map"}